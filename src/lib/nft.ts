import { AbiItem } from "viem";

export const abi: AbiItem[] = [
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "string", name: "symbol", type: "string" },
      { internalType: "address", name: "initialOwner", type: "address" },
      { internalType: "string", name: "baseURI", type: "string" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "address", name: "owner", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "approver", type: "address" }],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "operator", type: "address" }],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "receiver", type: "address" }],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "sender", type: "address" }],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "to", type: "address" }],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "baseURI", type: "string" }],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export const bytecode =
  "608060405234801561000f575f80fd5b5060405161155c38038061155c83398101604081905261002e91610198565b8184845f61003c83826102ca565b50600161004982826102ca565b5050506001600160a01b03811661007957604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100828161009a565b506001600755610091816100eb565b50505050610384565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b60086100f782826102ca565b5050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261011e575f80fd5b81516001600160401b03811115610137576101376100fb565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610165576101656100fb565b60405281815283820160200185101561017c575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f805f80608085870312156101ab575f80fd5b84516001600160401b038111156101c0575f80fd5b6101cc8782880161010f565b602087015190955090506001600160401b038111156101e9575f80fd5b6101f58782880161010f565b604087015190945090506001600160a01b0381168114610213575f80fd5b60608601519092506001600160401b0381111561022e575f80fd5b61023a8782880161010f565b91505092959194509250565b600181811c9082168061025a57607f821691505b60208210810361027857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102c557805f5260205f20601f840160051c810160208510156102a35750805b601f840160051c820191505b818110156102c2575f81556001016102af565b50505b505050565b81516001600160401b038111156102e3576102e36100fb565b6102f7816102f18454610246565b8461027e565b6020601f821160018114610329575f83156103125750848201515b5f19600385901b1c1916600184901b1784556102c2565b5f84815260208120601f198516915b828110156103585787850151825560209485019460019092019101610338565b508482101561037557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6111cb806103915f395ff3fe608060405234801561000f575f80fd5b5060043610610126575f3560e01c80636a627842116100a9578063a22cb4651161006e578063a22cb46514610263578063b88d4fde14610276578063c87b56dd14610289578063e985e9c51461029c578063f2fde38b146102af575f80fd5b80636a6278421461021c57806370a082311461022f578063715018a6146102425780638da5cb5b1461024a57806395d89b411461025b575f80fd5b806323b872dd116100ef57806323b872dd146101bd578063397ada21146101d057806342842e0e146101e357806355f804b3146101f65780636352211e14610209575f80fd5b80629a9b7b1461012a57806301ffc9a71461014557806306fdde0314610168578063081812fc1461017d578063095ea7b3146101a8575b5f80fd5b6101326102c2565b6040519081526020015b60405180910390f35b610158610153366004610c32565b6102d7565b604051901515815260200161013c565b610170610328565b60405161013c9190610c82565b61019061018b366004610c94565b6103b7565b6040516001600160a01b03909116815260200161013c565b6101bb6101b6366004610cc6565b6103de565b005b6101bb6101cb366004610cee565b6103ed565b6101bb6101de366004610d6d565b61047b565b6101bb6101f1366004610cee565b6104b8565b6101bb610204366004610e75565b6104d7565b610190610217366004610c94565b6104eb565b6101bb61022a366004610eba565b6104f5565b61013261023d366004610eba565b610506565b6101bb61054b565b6006546001600160a01b0316610190565b61017061055e565b6101bb610271366004610ed3565b61056d565b6101bb610284366004610f0c565b610578565b610170610297366004610c94565b61058f565b6101586102aa366004610f83565b6105a3565b6101bb6102bd366004610eba565b6105d0565b5f60016007546102d29190610fc8565b905090565b5f6001600160e01b031982166380ac58cd60e01b148061030757506001600160e01b03198216635b5e139f60e01b145b8061032257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461033690610fdb565b80601f016020809104026020016040519081016040528092919081815260200182805461036290610fdb565b80156103ad5780601f10610384576101008083540402835291602001916103ad565b820191905f5260205f20905b81548152906001019060200180831161039057829003601f168201915b5050505050905090565b5f6103c18261060a565b505f828152600460205260409020546001600160a01b0316610322565b6103e9828233610642565b5050565b6001600160a01b03821661041b57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61042783833361064f565b9050836001600160a01b0316816001600160a01b031614610475576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610412565b50505050565b610483610741565b5f5b81518110156103e9576104b08282815181106104a3576104a3611013565b602002602001015161076e565b600101610485565b6104d283838360405180602001604052805f815250610578565b505050565b6104df610741565b6104e881610791565b50565b5f6103228261060a565b6104fd610741565b6104e88161076e565b5f6001600160a01b038216610530576040516322718ad960e21b81525f6004820152602401610412565b506001600160a01b03165f9081526003602052604090205490565b610553610741565b61055c5f61079d565b565b60606001805461033690610fdb565b6103e93383836107ee565b6105838484846103ed565b6104758484848461088c565b606061059a8261060a565b506103226109b2565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6105d8610741565b6001600160a01b03811661060157604051631e4fbdf760e01b81525f6004820152602401610412565b6104e88161079d565b5f818152600260205260408120546001600160a01b03168061032257604051637e27328960e01b815260048101849052602401610412565b6104d283838360016109c1565b5f828152600260205260408120546001600160a01b039081169083161561067b5761067b818486610ac5565b6001600160a01b038116156106b5576106965f855f806109c1565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156106e3576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b0316331461055c5760405163118cdaa760e01b8152336004820152602401610412565b61077a81600754610b29565b60078054905f61078983611027565b919050555050565b60086103e98282611083565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661082057604051630b61174360e31b81526001600160a01b0383166004820152602401610412565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561047557604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108ce90339088908790879060040161113e565b6020604051808303815f875af1925050508015610908575060408051601f3d908101601f191682019092526109059181019061117a565b60015b61096f573d808015610935576040519150601f19603f3d011682016040523d82523d5f602084013e61093a565b606091505b5080515f0361096757604051633250574960e11b81526001600160a01b0385166004820152602401610412565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146109ab57604051633250574960e11b81526001600160a01b0385166004820152602401610412565b5050505050565b60606008805461033690610fdb565b80806109d557506001600160a01b03821615155b15610a96575f6109e48461060a565b90506001600160a01b03831615801590610a105750826001600160a01b0316816001600160a01b031614155b8015610a235750610a2181846105a3565b155b15610a4c5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610412565b8115610a945783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610ad0838383610b42565b6104d2576001600160a01b038316610afe57604051637e27328960e01b815260048101829052602401610412565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610412565b6103e9828260405180602001604052805f815250610ba6565b5f6001600160a01b03831615801590610b9e5750826001600160a01b0316846001600160a01b03161480610b7b5750610b7b84846105a3565b80610b9e57505f828152600460205260409020546001600160a01b038481169116145b949350505050565b610bb08383610bbc565b6104d25f84848461088c565b6001600160a01b038216610be557604051633250574960e11b81525f6004820152602401610412565b5f610bf183835f61064f565b90506001600160a01b038116156104d2576040516339e3563760e11b81525f6004820152602401610412565b6001600160e01b0319811681146104e8575f80fd5b5f60208284031215610c42575f80fd5b8135610c4d81610c1d565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c4d6020830184610c54565b5f60208284031215610ca4575f80fd5b5035919050565b80356001600160a01b0381168114610cc1575f80fd5b919050565b5f8060408385031215610cd7575f80fd5b610ce083610cab565b946020939093013593505050565b5f805f60608486031215610d00575f80fd5b610d0984610cab565b9250610d1760208501610cab565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d6557610d65610d28565b604052919050565b5f60208284031215610d7d575f80fd5b813567ffffffffffffffff811115610d93575f80fd5b8201601f81018413610da3575f80fd5b803567ffffffffffffffff811115610dbd57610dbd610d28565b8060051b610dcd60208201610d3c565b91825260208184018101929081019087841115610de8575f80fd5b6020850194505b83851015610e1157610e0085610cab565b825260209485019490910190610def565b979650505050505050565b5f8067ffffffffffffffff841115610e3657610e36610d28565b50601f8301601f1916602001610e4b81610d3c565b915050828152838383011115610e5f575f80fd5b828260208301375f602084830101529392505050565b5f60208284031215610e85575f80fd5b813567ffffffffffffffff811115610e9b575f80fd5b8201601f81018413610eab575f80fd5b610b9e84823560208401610e1c565b5f60208284031215610eca575f80fd5b610c4d82610cab565b5f8060408385031215610ee4575f80fd5b610eed83610cab565b915060208301358015158114610f01575f80fd5b809150509250929050565b5f805f8060808587031215610f1f575f80fd5b610f2885610cab565b9350610f3660208601610cab565b925060408501359150606085013567ffffffffffffffff811115610f58575f80fd5b8501601f81018713610f68575f80fd5b610f7787823560208401610e1c565b91505092959194509250565b5f8060408385031215610f94575f80fd5b610f9d83610cab565b9150610fab60208401610cab565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561032257610322610fb4565b600181811c90821680610fef57607f821691505b60208210810361100d57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161103857611038610fb4565b5060010190565b601f8211156104d257805f5260205f20601f840160051c810160208510156110645750805b601f840160051c820191505b818110156109ab575f8155600101611070565b815167ffffffffffffffff81111561109d5761109d610d28565b6110b1816110ab8454610fdb565b8461103f565b6020601f8211600181146110e3575f83156110cc5750848201515b5f19600385901b1c1916600184901b1784556109ab565b5f84815260208120601f198516915b8281101561111257878501518255602094850194600190920191016110f2565b508482101561112f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061117090830184610c54565b9695505050505050565b5f6020828403121561118a575f80fd5b8151610c4d81610c1d56fea26469706673582212201a61f91f9611ea4c5032d8446c8aa21db60ddb8778bed98bd2eacf78eab3378764736f6c634300081a0033000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000f3ddeb5022a6f06b61488b48c90315087ca2beef0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000e5141636350726f6a6563744e465400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065141504e4654000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000074261736555524900000000000000000000000000000000000000000000000000";
